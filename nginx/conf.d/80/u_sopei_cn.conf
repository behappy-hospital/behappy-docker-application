upstream u_sopei_cn_service {
   server 10.104.33.122:30011 weight=1 max_fails=3 fail_timeout=20;
   server 10.104.2.246:30011 weight=1 max_fails=3 fail_timeout=20;
   server 10.104.36.68:30011 weight=1 max_fails=3 fail_timeout=20;
}
server {
    listen       80;
    server_name  release-u.sosoqipei.com;
    proxy_set_header X-Real-IP $remote_addr;
    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #以下是一些反向代理的配置，可选。
    proxy_set_header Host $host;
    #允许客户端请求的最大单文件字节数
    client_max_body_size 10m;
    #缓冲区代理缓冲用户端请求的最大字节数，
    #如果把它设置为比较大的数值，例如256k，那么，无论使用firefox还是IE浏览器，来提交任意小于256k的图片，都很正常。如果注释该指令，使用默认的client_body_buffer_size设置，也就是操作系统页面大小的两倍，8k或者16k，问题就出现了。
    #无论使用firefox4.0还是IE8.0，提交一个比较大，200k左右的图片，都返回500 Internal Server Error错误
    client_body_buffer_size 128k;
    #表示使nginx阻止HTTP应答代码为400或者更高的应答。
    proxy_intercept_errors on;
    #后端服务器连接的超时时间_发起握手等候响应超时时间
    #nginx跟后端服务器连接超时时间(代理连接超时)
    proxy_connect_timeout 90;
    #后端服务器数据回传时间(代理发送超时)
    #后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据
    proxy_send_timeout 90;
    #连接成功后，后端服务器响应时间(代理接收超时)
    #连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）
    proxy_read_timeout 90;
    #设置代理服务器（nginx）保存用户头信息的缓冲区大小
    #设置从被代理服务器读取的第一部分应答的缓冲区大小，通常情况下这部分应答中包含一个小的应答头，默认情况下这个值的大小为指令proxy_buffers中指定的一个缓冲区的大小，不过可以将其设置为更小
    proxy_buffer_size 4k;
    #proxy_buffers缓冲区，网页平均在32k以下的设置
    #设置用于读取应答（来自被代理服务器）的缓冲区数目和大小，默认情况也为分页大小，根据操作系统的不同可能是4k或者8k
    proxy_buffers 4 32k;
    #高负荷下缓冲大小（proxy_buffers*2）
    proxy_busy_buffers_size 64k;
    #设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长
    #设定缓存文件夹大小，大于这个值，将从upstream服务器传
    proxy_temp_file_write_size 64k;
    error_page 404 /404.html;
    location = /404.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
    location ^~ / {
      proxy_pass http://u_sopei_cn_service;
    }
}
